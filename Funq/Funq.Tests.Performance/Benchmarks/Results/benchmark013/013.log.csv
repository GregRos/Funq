Test,Target,Time,Target_InitialSize,Iterations,DataSource_Size,DataSource_Type,Target_InitialGenerator,DataGenerator,Description,Class,Ratio
Union,System.ImmutableSet,115.742,10000,5,10000,System.ImmutableSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]",Computes the set-theoretic union with another data structure {iters} times.,SetOperation,
Intersection,System.ImmutableSet,52.877,10000,5,10000,System.ImmutableSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]",Computes the set-theoretic intersection with another data structure {iters} times.,SetOperation,
Except,System.ImmutableSet,50.385,10000,5,10000,System.ImmutableSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]",Computes the set-theoretic relative complement (or Except) operation.,SetOperation,
Difference,System.ImmutableSet,251.401,10000,5,10000,System.ImmutableSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]",Computes the set-theoretic symmetric difference operation.,SetOperation,
IsProperSubset,System.ImmutableSet,39.705,10000,5,10000,System.ImmutableSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]",Determines the Subset relation.,SetRelation,
IsProperSuperset,System.ImmutableSet,0.012,10000,5,10000,System.ImmutableSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]",Determines the Superset relation.,SetRelation,
SetEquals,System.ImmutableSet,35.756,10000,5,10000,System.ImmutableSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","Determines if this set equals another data structure, {iters} times.",SetRelation,
Add,System.ImmutableSet,23.513,10000,5,10000,Array,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","",SetSingle,
Contains,System.ImmutableSet,3.429,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","","Determines if a random element of the set is part of it, {iters} times.",SetSingle,
Drop,System.ImmutableSet,20.764,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","","",SetSingle,
IEnumerator,System.ImmutableSet,5.475,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","","",Iteration,
AddRange,System.ImmutableSet,16.565,10000,5,10000,Array,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","",SetRange,
DropRange,System.ImmutableSet,20.693,10000,5,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","","",SetRange,Some(0.3)
Iterate,System.ImmutableSet,5.697,10000,1,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","","",Iteration,
Union,FSharp.Set,56.386,10000,5,10000,FSharp.Set,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]",Computes the set-theoretic union with another data structure {iters} times.,SetOperation,
Intersection,FSharp.Set,25.202,10000,5,10000,FSharp.Set,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]",Computes the set-theoretic intersection with another data structure {iters} times.,SetOperation,
Except,FSharp.Set,112.908,10000,5,10000,FSharp.Set,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]",Computes the set-theoretic relative complement (or Except) operation.,SetOperation,
Difference,FSharp.Set,280.554,10000,5,10000,FSharp.Set,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]",Computes the set-theoretic symmetric difference operation.,SetOperation,
IsProperSubset,FSharp.Set,0.003,10000,5,10000,FSharp.Set,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]",Determines the Subset relation.,SetRelation,
IsProperSuperset,FSharp.Set,0.003,10000,5,10000,FSharp.Set,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]",Determines the Superset relation.,SetRelation,
SetEquals,FSharp.Set,0.015,10000,5,10000,FSharp.Set,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","Determines if this set equals another data structure, {iters} times.",SetRelation,
Add,FSharp.Set,99.946,10000,5,10000,Array,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","",SetSingle,
Contains,FSharp.Set,4.492,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","","Determines if a random element of the set is part of it, {iters} times.",SetSingle,
Drop,FSharp.Set,16.039,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","","",SetSingle,
IEnumerator,FSharp.Set,0.926,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","","",Iteration,
AddRange,FSharp.Set,103.045,10000,5,10000,Array,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","",SetRange,
DropRange,FSharp.Set,34.793,10000,5,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","","",SetRange,Some(0.3)
Iterate,FSharp.Set,1.131,10000,1,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","","",Iteration,
Union,FunqSet,41.355,10000,5,10000,FunqSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]",Computes the set-theoretic union with another data structure {iters} times.,SetOperation,
Intersection,FunqSet,30.723,10000,5,10000,FunqSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]",Computes the set-theoretic intersection with another data structure {iters} times.,SetOperation,
Except,FunqSet,33.343,10000,5,10000,FunqSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]",Computes the set-theoretic relative complement (or Except) operation.,SetOperation,
Difference,FunqSet,128.535,10000,5,10000,FunqSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]",Computes the set-theoretic symmetric difference operation.,SetOperation,
IsProperSubset,FunqSet,0.001,10000,5,10000,FunqSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]",Determines the Subset relation.,SetRelation,
IsProperSuperset,FunqSet,0.001,10000,5,10000,FunqSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]",Determines the Superset relation.,SetRelation,
SetEquals,FunqSet,0.012,10000,5,10000,FunqSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","Determines if this set equals another data structure, {iters} times.",SetRelation,
Add,FunqSet,18.639,10000,5,10000,Array,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","",SetSingle,
Contains,FunqSet,2.715,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","","Determines if a random element of the set is part of it, {iters} times.",SetSingle,
Drop,FunqSet,11.769,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","","",SetSingle,
IEnumerator,FunqSet,1.737,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","","",Iteration,
AddRange,FunqSet,13.716,10000,5,10000,Array,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","",SetRange,
DropRange,FunqSet,14.458,10000,5,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","","",SetRange,Some(0.3)
Iterate,FunqSet,0.679,10000,1,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","","",Iteration,
Union,FunqOrderedSet,31.119,10000,5,10000,FunqOrderedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]",Computes the set-theoretic union with another data structure {iters} times.,SetOperation,
Intersection,FunqOrderedSet,39.657,10000,5,10000,FunqOrderedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]",Computes the set-theoretic intersection with another data structure {iters} times.,SetOperation,
Except,FunqOrderedSet,24.453,10000,5,10000,FunqOrderedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]",Computes the set-theoretic relative complement (or Except) operation.,SetOperation,
Difference,FunqOrderedSet,77.969,10000,5,10000,FunqOrderedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]",Computes the set-theoretic symmetric difference operation.,SetOperation,
IsProperSubset,FunqOrderedSet,0.000,10000,5,10000,FunqOrderedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]",Determines the Subset relation.,SetRelation,
IsProperSuperset,FunqOrderedSet,0.000,10000,5,10000,FunqOrderedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]",Determines the Superset relation.,SetRelation,
SetEquals,FunqOrderedSet,0.007,10000,5,10000,FunqOrderedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","Determines if this set equals another data structure, {iters} times.",SetRelation,
Add,FunqOrderedSet,24.192,10000,5,10000,Array,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","",SetSingle,
Contains,FunqOrderedSet,3.796,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","","Determines if a random element of the set is part of it, {iters} times.",SetSingle,
Drop,FunqOrderedSet,21.315,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","","",SetSingle,
IEnumerator,FunqOrderedSet,1.514,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","","",Iteration,
AddRange,FunqOrderedSet,23.532,10000,5,10000,Array,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","",SetRange,
DropRange,FunqOrderedSet,14.833,10000,5,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","","",SetRange,Some(0.3)
Iterate,FunqOrderedSet,0.634,10000,1,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","","",Iteration,
Union,System.ImmutableSortedSet,211.749,10000,5,10000,System.ImmutableSortedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]",Computes the set-theoretic union with another data structure {iters} times.,SetOperation,
Intersection,System.ImmutableSortedSet,164.485,10000,5,10000,System.ImmutableSortedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]",Computes the set-theoretic intersection with another data structure {iters} times.,SetOperation,
Except,System.ImmutableSortedSet,170.739,10000,5,10000,System.ImmutableSortedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]",Computes the set-theoretic relative complement (or Except) operation.,SetOperation,
Difference,System.ImmutableSortedSet,734.599,10000,5,10000,System.ImmutableSortedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]",Computes the set-theoretic symmetric difference operation.,SetOperation,
IsProperSubset,System.ImmutableSortedSet,127.782,10000,5,10000,System.ImmutableSortedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]",Determines the Subset relation.,SetRelation,
IsProperSuperset,System.ImmutableSortedSet,0.021,10000,5,10000,System.ImmutableSortedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]",Determines the Superset relation.,SetRelation,
SetEquals,System.ImmutableSortedSet,133.948,10000,5,10000,System.ImmutableSortedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","Determines if this set equals another data structure, {iters} times.",SetRelation,
Add,System.ImmutableSortedSet,137.257,10000,5,10000,Array,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","",SetSingle,
Contains,System.ImmutableSortedSet,25.829,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","","Determines if a random element of the set is part of it, {iters} times.",SetSingle,
Drop,System.ImmutableSortedSet,34.350,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","","",SetSingle,
IEnumerator,System.ImmutableSortedSet,3.415,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","","",Iteration,
AddRange,System.ImmutableSortedSet,127.663,10000,5,10000,Array,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","",SetRange,
DropRange,System.ImmutableSortedSet,51.696,10000,5,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","","",SetRange,Some(0.3)
Iterate,System.ImmutableSortedSet,4.763,10000,1,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 10)]","","",Iteration,
