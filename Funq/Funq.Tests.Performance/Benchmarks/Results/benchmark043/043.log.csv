Test,Target,Time,Target_InitialSize,Iterations,DataSource_Size,DataSource_Type,Target_InitialGenerator,DataGenerator,Description,Class,Ratio
Union,System.ImmutableSet,79.722,10000,5,10000,System.ImmutableSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic union with another data structure {iters} times.,SetOperation,
Intersection,System.ImmutableSet,30.157,10000,5,10000,System.ImmutableSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic intersection with another data structure {iters} times.,SetOperation,
Except,System.ImmutableSet,32.034,10000,5,10000,System.ImmutableSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic relative complement (or Except) operation.,SetOperation,
Difference,System.ImmutableSet,161.710,10000,5,10000,System.ImmutableSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic symmetric difference operation.,SetOperation,
IsProperSubset,System.ImmutableSet,23.338,10000,5,10000,System.ImmutableSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Determines the Subset relation.,SetRelation,
IsProperSuperset,System.ImmutableSet,0.012,10000,5,10000,System.ImmutableSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Determines the Superset relation.,SetRelation,
SetEquals,System.ImmutableSet,23.910,10000,5,10000,System.ImmutableSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","Determines if this set equals another data structure, {iters} times.",SetRelation,
Add,System.ImmutableSet,13.954,10000,5,10000,Array,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","",SetSingle,
Contains,System.ImmutableSet,2.562,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","Determines if a random element of the set is part of it, {iters} times.",SetSingle,
Drop,System.ImmutableSet,13.515,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",SetSingle,
IEnumerator,System.ImmutableSet,3.456,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",Iteration,
AddRange,System.ImmutableSet,11.651,10000,5,10000,Array,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","",SetRange,
DropRange,System.ImmutableSet,14.722,10000,5,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",SetRange,Some(0.3)
Iterate,System.ImmutableSet,3.972,10000,1,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",Iteration,
Union,FSharp.Set,43.033,10000,5,10000,FSharp.Set,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic union with another data structure {iters} times.,SetOperation,
Intersection,FSharp.Set,17.442,10000,5,10000,FSharp.Set,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic intersection with another data structure {iters} times.,SetOperation,
Except,FSharp.Set,81.959,10000,5,10000,FSharp.Set,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic relative complement (or Except) operation.,SetOperation,
Difference,FSharp.Set,212.971,10000,5,10000,FSharp.Set,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic symmetric difference operation.,SetOperation,
IsProperSubset,FSharp.Set,0.003,10000,5,10000,FSharp.Set,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Determines the Subset relation.,SetRelation,
IsProperSuperset,FSharp.Set,0.004,10000,5,10000,FSharp.Set,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Determines the Superset relation.,SetRelation,
SetEquals,FSharp.Set,0.010,10000,5,10000,FSharp.Set,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","Determines if this set equals another data structure, {iters} times.",SetRelation,
Add,FSharp.Set,75.515,10000,5,10000,Array,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","",SetSingle,
Contains,FSharp.Set,3.450,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","Determines if a random element of the set is part of it, {iters} times.",SetSingle,
Drop,FSharp.Set,11.142,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",SetSingle,
IEnumerator,FSharp.Set,0.661,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",Iteration,
AddRange,FSharp.Set,76.517,10000,5,10000,Array,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","",SetRange,
DropRange,FSharp.Set,22.935,10000,5,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",SetRange,Some(0.3)
Iterate,FSharp.Set,0.851,10000,1,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",Iteration,
Union,FunqSet,19.509,10000,5,10000,FunqSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic union with another data structure {iters} times.,SetOperation,
Intersection,FunqSet,19.863,10000,5,10000,FunqSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic intersection with another data structure {iters} times.,SetOperation,
Except,FunqSet,13.065,10000,5,10000,FunqSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic relative complement (or Except) operation.,SetOperation,
Difference,FunqSet,40.579,10000,5,10000,FunqSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic symmetric difference operation.,SetOperation,
IsProperSubset,FunqSet,0.008,10000,5,10000,FunqSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Determines the Subset relation.,SetRelation,
IsProperSuperset,FunqSet,0.009,10000,5,10000,FunqSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Determines the Superset relation.,SetRelation,
SetEquals,FunqSet,0.008,10000,5,10000,FunqSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","Determines if this set equals another data structure, {iters} times.",SetRelation,
Add,FunqSet,12.843,10000,5,10000,Array,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","",SetSingle,
Contains,FunqSet,1.814,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","Determines if a random element of the set is part of it, {iters} times.",SetSingle,
Drop,FunqSet,6.887,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",SetSingle,
IEnumerator,FunqSet,0.979,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",Iteration,
AddRange,FunqSet,10.364,10000,5,10000,Array,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","",SetRange,
DropRange,FunqSet,9.572,10000,5,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",SetRange,Some(0.3)
Iterate,FunqSet,0.305,10000,1,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",Iteration,
Union,FunqOrderedSet,17.194,10000,5,10000,FunqOrderedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic union with another data structure {iters} times.,SetOperation,
Intersection,FunqOrderedSet,27.123,10000,5,10000,FunqOrderedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic intersection with another data structure {iters} times.,SetOperation,
Except,FunqOrderedSet,15.048,10000,5,10000,FunqOrderedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic relative complement (or Except) operation.,SetOperation,
Difference,FunqOrderedSet,41.776,10000,5,10000,FunqOrderedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic symmetric difference operation.,SetOperation,
IsProperSubset,FunqOrderedSet,0.007,10000,5,10000,FunqOrderedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Determines the Subset relation.,SetRelation,
IsProperSuperset,FunqOrderedSet,0.007,10000,5,10000,FunqOrderedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Determines the Superset relation.,SetRelation,
SetEquals,FunqOrderedSet,0.007,10000,5,10000,FunqOrderedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","Determines if this set equals another data structure, {iters} times.",SetRelation,
Add,FunqOrderedSet,16.665,10000,5,10000,Array,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","",SetSingle,
Contains,FunqOrderedSet,2.809,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","Determines if a random element of the set is part of it, {iters} times.",SetSingle,
Drop,FunqOrderedSet,12.092,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",SetSingle,
IEnumerator,FunqOrderedSet,0.951,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",Iteration,
AddRange,FunqOrderedSet,16.827,10000,5,10000,Array,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","",SetRange,
DropRange,FunqOrderedSet,10.492,10000,5,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",SetRange,Some(0.3)
Iterate,FunqOrderedSet,0.267,10000,1,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",Iteration,
Union,System.ImmutableSortedSet,164.947,10000,5,10000,System.ImmutableSortedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic union with another data structure {iters} times.,SetOperation,
Intersection,System.ImmutableSortedSet,101.279,10000,5,10000,System.ImmutableSortedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic intersection with another data structure {iters} times.,SetOperation,
Except,System.ImmutableSortedSet,110.593,10000,5,10000,System.ImmutableSortedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic relative complement (or Except) operation.,SetOperation,
Difference,System.ImmutableSortedSet,520.009,10000,5,10000,System.ImmutableSortedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic symmetric difference operation.,SetOperation,
IsProperSubset,System.ImmutableSortedSet,80.861,10000,5,10000,System.ImmutableSortedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Determines the Subset relation.,SetRelation,
IsProperSuperset,System.ImmutableSortedSet,0.020,10000,5,10000,System.ImmutableSortedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Determines the Superset relation.,SetRelation,
SetEquals,System.ImmutableSortedSet,79.856,10000,5,10000,System.ImmutableSortedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","Determines if this set equals another data structure, {iters} times.",SetRelation,
Add,System.ImmutableSortedSet,108.404,10000,5,10000,Array,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","",SetSingle,
Contains,System.ImmutableSortedSet,14.815,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","Determines if a random element of the set is part of it, {iters} times.",SetSingle,
Drop,System.ImmutableSortedSet,20.206,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",SetSingle,
IEnumerator,System.ImmutableSortedSet,2.310,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",Iteration,
AddRange,System.ImmutableSortedSet,106.535,10000,5,10000,Array,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","",SetRange,
DropRange,System.ImmutableSortedSet,31.127,10000,5,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",SetRange,Some(0.3)
Iterate,System.ImmutableSortedSet,2.933,10000,1,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",Iteration,
