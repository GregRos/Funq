Test,Target,Time,Target_InitialSize,Iterations,DataSource_Size,DataSource_Type,Target_InitialGenerator,DataGenerator,Description,Class,Ratio
Union,System.ImmutableSet,82.558,10000,5,10000,System.ImmutableSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic union with another data structure {iters} times.,SetOperation,
Intersection,System.ImmutableSet,33.779,10000,5,10000,System.ImmutableSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic intersection with another data structure {iters} times.,SetOperation,
Except,System.ImmutableSet,36.125,10000,5,10000,System.ImmutableSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic relative complement (or Except) operation.,SetOperation,
Difference,System.ImmutableSet,162.247,10000,5,10000,System.ImmutableSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic symmetric difference operation.,SetOperation,
IsProperSubset,System.ImmutableSet,24.808,10000,5,10000,System.ImmutableSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Determines the Subset relation.,SetRelation,
IsProperSuperset,System.ImmutableSet,0.011,10000,5,10000,System.ImmutableSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Determines the Superset relation.,SetRelation,
SetEquals,System.ImmutableSet,25.050,10000,5,10000,System.ImmutableSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","Determines if this set equals another data structure, {iters} times.",SetRelation,
Add,System.ImmutableSet,14.960,10000,5,10000,Array,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","",SetSingle,
Contains,System.ImmutableSet,2.731,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","Determines if a random element of the set is part of it, {iters} times.",SetSingle,
Drop,System.ImmutableSet,13.403,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",SetSingle,
IEnumerator,System.ImmutableSet,3.969,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",Iteration,
AddRange,System.ImmutableSet,12.224,10000,5,10000,Array,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","",SetRange,
DropRange,System.ImmutableSet,15.416,10000,5,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",SetRange,Some(0.3)
Iterate,System.ImmutableSet,4.542,10000,1,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",Iteration,
Union,FSharp.Set,44.228,10000,5,10000,FSharp.Set,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic union with another data structure {iters} times.,SetOperation,
Intersection,FSharp.Set,18.410,10000,5,10000,FSharp.Set,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic intersection with another data structure {iters} times.,SetOperation,
Except,FSharp.Set,82.297,10000,5,10000,FSharp.Set,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic relative complement (or Except) operation.,SetOperation,
Difference,FSharp.Set,213.674,10000,5,10000,FSharp.Set,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic symmetric difference operation.,SetOperation,
IsProperSubset,FSharp.Set,0.003,10000,5,10000,FSharp.Set,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Determines the Subset relation.,SetRelation,
IsProperSuperset,FSharp.Set,0.003,10000,5,10000,FSharp.Set,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Determines the Superset relation.,SetRelation,
SetEquals,FSharp.Set,0.011,10000,5,10000,FSharp.Set,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","Determines if this set equals another data structure, {iters} times.",SetRelation,
Add,FSharp.Set,75.395,10000,5,10000,Array,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","",SetSingle,
Contains,FSharp.Set,3.519,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","Determines if a random element of the set is part of it, {iters} times.",SetSingle,
Drop,FSharp.Set,12.587,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",SetSingle,
IEnumerator,FSharp.Set,0.659,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",Iteration,
AddRange,FSharp.Set,79.325,10000,5,10000,Array,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","",SetRange,
DropRange,FSharp.Set,24.243,10000,5,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",SetRange,Some(0.3)
Iterate,FSharp.Set,0.807,10000,1,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",Iteration,
Union,FunqSet,19.704,10000,5,10000,FunqSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic union with another data structure {iters} times.,SetOperation,
Intersection,FunqSet,24.461,10000,5,10000,FunqSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic intersection with another data structure {iters} times.,SetOperation,
Except,FunqSet,15.011,10000,5,10000,FunqSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic relative complement (or Except) operation.,SetOperation,
Difference,FunqSet,44.821,10000,5,10000,FunqSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic symmetric difference operation.,SetOperation,
IsProperSubset,FunqSet,0.008,10000,5,10000,FunqSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Determines the Subset relation.,SetRelation,
IsProperSuperset,FunqSet,0.008,10000,5,10000,FunqSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Determines the Superset relation.,SetRelation,
SetEquals,FunqSet,0.008,10000,5,10000,FunqSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","Determines if this set equals another data structure, {iters} times.",SetRelation,
Add,FunqSet,20.188,10000,5,10000,Array,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","",SetSingle,
Contains,FunqSet,1.927,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","Determines if a random element of the set is part of it, {iters} times.",SetSingle,
Drop,FunqSet,7.409,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",SetSingle,
IEnumerator,FunqSet,1.046,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",Iteration,
AddRange,FunqSet,10.505,10000,5,10000,Array,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","",SetRange,
DropRange,FunqSet,9.616,10000,5,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",SetRange,Some(0.3)
Iterate,FunqSet,0.383,10000,1,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",Iteration,
Union,FunqOrderedSet,17.585,10000,5,10000,FunqOrderedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic union with another data structure {iters} times.,SetOperation,
Intersection,FunqOrderedSet,27.675,10000,5,10000,FunqOrderedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic intersection with another data structure {iters} times.,SetOperation,
Except,FunqOrderedSet,15.032,10000,5,10000,FunqOrderedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic relative complement (or Except) operation.,SetOperation,
Difference,FunqOrderedSet,42.421,10000,5,10000,FunqOrderedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic symmetric difference operation.,SetOperation,
IsProperSubset,FunqOrderedSet,0.025,10000,5,10000,FunqOrderedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Determines the Subset relation.,SetRelation,
IsProperSuperset,FunqOrderedSet,0.009,10000,5,10000,FunqOrderedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Determines the Superset relation.,SetRelation,
SetEquals,FunqOrderedSet,0.008,10000,5,10000,FunqOrderedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","Determines if this set equals another data structure, {iters} times.",SetRelation,
Add,FunqOrderedSet,18.144,10000,5,10000,Array,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","",SetSingle,
Contains,FunqOrderedSet,2.639,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","Determines if a random element of the set is part of it, {iters} times.",SetSingle,
Drop,FunqOrderedSet,11.255,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",SetSingle,
IEnumerator,FunqOrderedSet,0.945,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",Iteration,
AddRange,FunqOrderedSet,15.768,10000,5,10000,Array,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","",SetRange,
DropRange,FunqOrderedSet,10.626,10000,5,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",SetRange,Some(0.3)
Iterate,FunqOrderedSet,0.231,10000,1,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",Iteration,
Union,System.ImmutableSortedSet,139.917,10000,5,10000,System.ImmutableSortedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic union with another data structure {iters} times.,SetOperation,
Intersection,System.ImmutableSortedSet,157.711,10000,5,10000,System.ImmutableSortedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic intersection with another data structure {iters} times.,SetOperation,
Except,System.ImmutableSortedSet,141.845,10000,5,10000,System.ImmutableSortedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic relative complement (or Except) operation.,SetOperation,
Difference,System.ImmutableSortedSet,549.488,10000,5,10000,System.ImmutableSortedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Computes the set-theoretic symmetric difference operation.,SetOperation,
IsProperSubset,System.ImmutableSortedSet,81.926,10000,5,10000,System.ImmutableSortedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Determines the Subset relation.,SetRelation,
IsProperSuperset,System.ImmutableSortedSet,0.024,10000,5,10000,System.ImmutableSortedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]",Determines the Superset relation.,SetRelation,
SetEquals,System.ImmutableSortedSet,82.108,10000,5,10000,System.ImmutableSortedSet,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","Determines if this set equals another data structure, {iters} times.",SetRelation,
Add,System.ImmutableSortedSet,83.648,10000,5,10000,Array,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","",SetSingle,
Contains,System.ImmutableSortedSet,21.674,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","Determines if a random element of the set is part of it, {iters} times.",SetSingle,
Drop,System.ImmutableSortedSet,28.071,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",SetSingle,
IEnumerator,System.ImmutableSortedSet,2.362,10000,10000,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",Iteration,
AddRange,System.ImmutableSortedSet,81.644,10000,5,10000,Array,"[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","",SetRange,
DropRange,System.ImmutableSortedSet,40.407,10000,5,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",SetRange,Some(0.3)
Iterate,System.ImmutableSortedSet,3.201,10000,1,0,"","[Name = ""Unique Strings of Letters by Length""; ElementType = System.String; Range = (1, 15)]","","",Iteration,
