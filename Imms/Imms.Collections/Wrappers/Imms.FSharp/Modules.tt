<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".fs" #>
<#@ include file="Helpers.ttinclude"#><# if (!RanAlready) {
		RanAlready = true;
		return TransformText().Replace("\t", "    ");
	}
#>
namespace Imms.FSharp
open Imms.FSharp
open Imms.FSharp.Implementation
open Imms
module ImmVector = 
<#=IncludeWithParameters("Sequential.ttinclude", new[] {Tu("TypeName", "ImmVector<'v>"), Tu("ElementName", "'v")},1 )#>

module ImmList = 
<#=IncludeWithParameters("Sequential.ttinclude", 
	new[] {
		Tu("TypeName", "ImmList<'v>"), 
		Tu("ElementName", "'v")
	}, 1)#>
	 
module ImmSet = 
<#=IncludeWithParameters("Set.ttinclude", 
	new[] {
		Tu("TypeName", "ImmSet<'k>"), 
		Tu("ElementName", "'k")
	}, 1)#>

module ImmOrderedSet = 
<#=IncludeWithParameters("Set.ttinclude", 
	new[] {
		Tu("TypeName", "ImmOrderedSet<'k>"), 
		Tu("ElementName", "'k")
	}, 1)#>

module ImmMap = 
<#=IncludeWithParameters("Map.ttinclude", 
	new[] {
		Tu("TypeName", "ImmMap<'k, 'v>"), 
		Tu("KeyName", "'k"),
		Tu("ValueName", "'v")
	}, 1)#>

module ImmOrderedMap = 
<#=IncludeWithParameters("Map.ttinclude", 
	new[] {
		Tu("TypeName", "ImmOrderedMap<'k, 'v>"), 
		Tu("KeyName", "'k"),
		Tu("ValueName", "'v")
	}, 1)#>
	

